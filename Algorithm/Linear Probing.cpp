//线性探查法的HashTable
//insert：通过hash function计算下标，如果该下标的位置被占用，下标依次向后移动一位，直到找到一个空的位置，放入该元素
//find:该hash table的find算法，先计算下标，如果该下标的位置为空，则不存在该元素，如果不为空，依次向后移动一位，如果在遇到
//空的位置之前，找到该元素，则该元素存在，否则该元素不存在
//delete:必须使用迟删除，因为在解决冲突中，元素作为连接其他符的占位符，可以把该元素标记为删除